@startuml precident_sale
scale 2
class Stadion {
    -matches Match[]
    +GetAllMatchesInfo() MatchInfo[]
}
class Match {
    -places []int
    -matchDate date
    +getFreePlaces() []int, error
    +ChangePlaceStatus(places int[]) error
    +GetInfo() MatchInfo
}
class Ticket
class Sale
class SaleSystem {
    -stadions: Stadion[]
    -payments: PaymentSystem
    -addsales: Sale[]
    -changeStatus(purchase_id : int, status : bool) error
    +getAllMatches() : []MatchInfo, error
    +createPurchase (match_id: int, place_id: []int): int, error
    +Pay(purches_id: int) : error
    +createUser(firstname: string, lastname: string,pasport: string): int, error
    +PayPaymentSystem(card_id : int, cost : int, purchase_id : int) : string, error
}
class User
struct MatchInfo {
    Name: string
    Date: date
    Commands: []string
    FreePlaces: []int
}
interface PaymentSystem

Match --* Stadion
Stadion --* SaleSystem

Sale o-left- Ticket
SaleSystem *-left- Sale
User --* SaleSystem
User -down-{ Sale
PaymentSystem -down-* SaleSystem

@enduml